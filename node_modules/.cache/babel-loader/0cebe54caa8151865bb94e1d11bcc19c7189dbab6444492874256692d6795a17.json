{"ast":null,"code":"import { createRouter, createWebHashHistory } from 'vue-router';\nimport Home from '../';\nimport Shop from '../views/shop/Shop';\nimport Login from '../views/login/Login';\nimport Register from '../views/register/Register';\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: () => import( /* webpackChunkName: \"about\" */'..views/home/Home')\n}, {\n  path: '/shop',\n  name: 'Shop',\n  component: Shop\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register,\n  beforeEnter(to, from, next) {\n    const {\n      isLogin\n    } = localStorage;\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login,\n  //只有访问Login这个页面才会执行\n  beforeEnter(to, from, next) {\n    const {\n      isLogin\n    } = localStorage;\n    isLogin ? next({\n      name: 'Home'\n    }) : next();\n  }\n}\n// {\n//   path: '/about',\n//   name: 'about',\n//   // route level code-splitting\n//   // this generates a separate chunk (about.[hash].js) for this route\n//   // which is lazy-loaded when the route is visited.\n//   component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n// }\n];\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n});\n\n//不管什么路由做切换都会执行\nrouter.beforeEach((to, from, next) => {\n  const {\n    isLogin\n  } = localStorage;\n  if (!isLogin && to.name !== \"Login\" && to.name !== 'Register') {\n    next({\n      name: 'Login'\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHashHistory","Home","Shop","Login","Register","routes","path","name","component","beforeEnter","to","from","next","isLogin","localStorage","router","history","beforeEach"],"sources":["F:/Web2022/week23-25/shengxian/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHashHistory } from 'vue-router'\nimport Home from '../'\nimport Shop from '../views/shop/Shop'\nimport Login from '../views/login/Login'\nimport Register from '../views/register/Register'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: () => import(/* webpackChunkName: \"about\" */ '..views/home/Home')\n\n  },\n  {\n    path: '/shop',\n    name: 'Shop',\n    component: Shop\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: Register,\n    beforeEnter(to,from,next){\n      const {isLogin}=localStorage\n      isLogin ? next({name:'Home'}):next();\n    }\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: Login,\n    //只有访问Login这个页面才会执行\n    beforeEnter(to,from,next){\n      const {isLogin}=localStorage\n      isLogin ? next({name:'Home'}):next();\n    }\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   // route level code-splitting\n  //   // this generates a separate chunk (about.[hash].js) for this route\n  //   // which is lazy-loaded when the route is visited.\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/AboutView.vue')\n  // }\n]\n\n\nconst router = createRouter({\n  history: createWebHashHistory(),\n  routes\n})\n\n//不管什么路由做切换都会执行\nrouter.beforeEach((to,from,next)=>{\n  const {isLogin}=localStorage;\n  if(!isLogin && (to.name!==\"Login\"&&to.name!=='Register')){\n    next({name:'Login'})\n  }else{\n    next()\n  }\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,oBAAoB,QAAQ,YAAY;AAC/D,OAAOC,IAAI,MAAM,KAAK;AACtB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,KAAK,MAAM,sBAAsB;AACxC,OAAOC,QAAQ,MAAM,4BAA4B;AAEjD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEA,CAAA,KAAM,MAAM,EAAC,+BAAgC,mBAAmB;AAE7E,CAAC,EACD;EACEF,IAAI,EAAE,OAAO;EACbC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEN;AACb,CAAC,EACD;EACEI,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEJ,QAAQ;EACnBK,WAAWA,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,EAAC;IACvB,MAAM;MAACC;IAAO,CAAC,GAACC,YAAY;IAC5BD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAC;IAAM,CAAC,CAAC,GAACK,IAAI,EAAE;EACtC;AACF,CAAC,EACD;EACEN,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEL,KAAK;EAChB;EACAM,WAAWA,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,EAAC;IACvB,MAAM;MAACC;IAAO,CAAC,GAACC,YAAY;IAC5BD,OAAO,GAAGD,IAAI,CAAC;MAACL,IAAI,EAAC;IAAM,CAAC,CAAC,GAACK,IAAI,EAAE;EACtC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,CACD;;AAGD,MAAMG,MAAM,GAAGhB,YAAY,CAAC;EAC1BiB,OAAO,EAAEhB,oBAAoB,EAAE;EAC/BK;AACF,CAAC,CAAC;;AAEF;AACAU,MAAM,CAACE,UAAU,CAAC,CAACP,EAAE,EAACC,IAAI,EAACC,IAAI,KAAG;EAChC,MAAM;IAACC;EAAO,CAAC,GAACC,YAAY;EAC5B,IAAG,CAACD,OAAO,IAAKH,EAAE,CAACH,IAAI,KAAG,OAAO,IAAEG,EAAE,CAACH,IAAI,KAAG,UAAW,EAAC;IACvDK,IAAI,CAAC;MAACL,IAAI,EAAC;IAAO,CAAC,CAAC;EACtB,CAAC,MAAI;IACHK,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AAEF,eAAeG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}