{"ast":null,"code":"import { createStore } from 'vuex';\nconst setLocalCartList = state => {\n  const {\n    cartList\n  } = state;\n  const cartListString = JSON.stringify(cartList);\n  localStorage.cartList = cartListString;\n};\nconst getLocalCartList = () => {\n  // {shopId:{shopName:'',productList:{productId:{}}}}\n  try {\n    return JSON.parse(localStorage.cartList);\n  } catch (e) {\n    return {};\n  }\n};\nexport default Vuex.createStore({\n  state: {\n    cartList: getLocalCartList(),\n    addressList: []\n  },\n  mutations: {\n    //\n    changeCartItemInfo(state, payload) {\n      const {\n        shopId,\n        productId,\n        productInfo\n      } = payload;\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      };\n      let product = shopInfo.productList[productId];\n      if (!product) {\n        productInfo.count = 0;\n        product = productInfo;\n      }\n      product.count = product.count + payload.num;\n      if (payload.num > 0) {\n        product.check = true;\n      }\n      if (product.count < 0) {\n        product.count = 0;\n      }\n      shopInfo.productList[productId] = product;\n      state.cartList[shopId] = shopInfo;\n      setLocalCartList(state);\n    },\n    changeShopName(state, payload) {\n      const {\n        shopId,\n        shopName\n      } = payload;\n      const shopInfo = state.cartList[shopId] || {\n        shopName: '',\n        productList: {}\n      };\n      shopInfo.shopName = shopName;\n      state.cartList[shopId] = shopInfo;\n      setLocalCartList(state);\n    },\n    changeCartItemChecked(state, payload) {\n      const {\n        shopId,\n        productId\n      } = payload;\n      const product = state.cartList[shopId].productList[productId];\n      product.check = !product.check;\n      setLocalCartList(state);\n    },\n    cleanCartProducts(state, payload) {\n      const {\n        shopId\n      } = payload;\n      state.cartList[shopId].productList = {};\n      setLocalCartList(state);\n    },\n    setCartItemsChecked(state, payload) {\n      const {\n        shopId\n      } = payload;\n      const products = state.cartList[shopId].productList;\n      if (products) {\n        for (let key in products) {\n          const product = products[key];\n          product.check = true;\n        }\n      }\n      setLocalCartList(state);\n    },\n    clearCartData(state, shopId) {\n      state.cartList[shopId].productList = {};\n    },\n    changeAddressList(state, addressList) {\n      state.addressList.splice(0, state.addressList.length, ...addressList);\n    }\n  },\n  actions: {},\n  modules: {}\n});","map":{"version":3,"names":["createStore","setLocalCartList","state","cartList","cartListString","JSON","stringify","localStorage","getLocalCartList","parse","e","Vuex","addressList","mutations","changeCartItemInfo","payload","shopId","productId","productInfo","shopInfo","shopName","productList","product","count","num","check","changeShopName","changeCartItemChecked","cleanCartProducts","setCartItemsChecked","products","key","clearCartData","changeAddressList","splice","length","actions","modules"],"sources":["F:/Web2022/shengxian/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nconst setLocalCartList = (state) => {\n  const { cartList } = state\n  const cartListString = JSON.stringify(cartList)\n  localStorage.cartList = cartListString\n}\nconst getLocalCartList = () => {\n  // {shopId:{shopName:'',productList:{productId:{}}}}\n  try {\n    return JSON.parse(localStorage.cartList) \n  }catch(e){\n    return {}\n  }\n}\n\nexport default Vuex.createStore({\n  state: {\n    cartList: getLocalCartList(),\n    addressList:[],\n  },\n  mutations: {\n    //\n    changeCartItemInfo(state, payload) {\n      const { shopId, productId, productInfo } = payload;\n\n      let shopInfo = state.cartList[shopId] || {\n        shopName: '', productList: {}\n      };\n      let product = shopInfo.productList[productId]\n      if (!product) {\n        productInfo.count = 0\n        product = productInfo\n      }\n      product.count = product.count + payload.num\n      if (payload.num > 0) { product.check = true }\n      if (product.count < 0) { product.count = 0 }\n      shopInfo.productList[productId] = product\n      state.cartList[shopId] = shopInfo\n      setLocalCartList(state)\n    },\n    changeShopName(state, payload) {\n      const { shopId, shopName } = payload\n      const shopInfo = state.cartList[shopId] || {\n        shopName: '', productList: {}\n      }\n      shopInfo.shopName = shopName\n      state.cartList[shopId] = shopInfo\n      setLocalCartList(state)\n    },\n    changeCartItemChecked(state, payload) {\n      const { shopId, productId } = payload\n      const product = state.cartList[shopId].productList[productId]\n      product.check = !product.check\n      setLocalCartList(state)\n    },\n    cleanCartProducts(state, payload) {\n      const { shopId } = payload\n      state.cartList[shopId].productList = {}\n      setLocalCartList(state)\n    },\n    setCartItemsChecked(state, payload) {\n      const { shopId } = payload\n      const products = state.cartList[shopId].productList\n      if (products) {\n        for (let key in products) {\n          const product = products[key]\n          product.check = true\n        }\n      }\n      setLocalCartList(state)\n    },\n    clearCartData(state, shopId) {\n      state.cartList[shopId].productList = {}\n    },\n    changeAddressList(state,addressList){\n      state.addressList.splice(0,state.addressList.length,...addressList)\n    }\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}