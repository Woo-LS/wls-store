{"ast":null,"code":"import axios from \"axios\";\nimport { reject, resolve } from \"core-js/fn/promise\";\nconst instance = axios.create({\n  // baseURL:'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\n  baseURL: 'http://localhost:3000',\n  withCredentials: true,\n  //允许跨域传递cookie (登录)\n  timeout: 10000\n});\nexport const get = (url, params = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.get(url, {\n      params\n    }).then(response => {\n      resolve(response.data);\n    }), err => {\n      reject(err);\n    };\n  });\n};\nexport const post = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.post(url, data, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      resolve(response.data);\n    }), err => {\n      reject(err);\n    };\n  });\n};\nexport const patch = (url, data = {}) => {\n  return new Promise((resolve, reject) => {\n    instance.patch(url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      resolve(response.data);\n    }, err => {\n      reject(err);\n    });\n  });\n};","map":{"version":3,"names":["axios","reject","resolve","instance","create","baseURL","withCredentials","timeout","get","url","params","Promise","then","response","data","err","post","headers","patch"],"sources":["F:/Web2022/shengxian/src/utils/request.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { reject, resolve } from \"core-js/fn/promise\"\r\n\r\nconst instance = axios.create({\r\n    // baseURL:'https://www.fastmock.site/mock/ae8e9031947a302fed5f92425995aa19/jd',\r\n    baseURL: 'http://localhost:3000',\r\n    withCredentials: true, //允许跨域传递cookie (登录)\r\n    timeout: 10000\r\n})\r\nexport const get = (url, params = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance.get(url, { params }).then((response) => {\r\n            resolve(response.data)\r\n        }), err => {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\nexport const post = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance.post(url, data, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        }).then((response) => {\r\n            resolve(response.data)\r\n        }), err => {\r\n            reject(err)\r\n        }\r\n    })\r\n}\r\n\r\nexport const patch = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n        instance.patch(url, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((response) => {\r\n            resolve(response.data)\r\n        }, err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}\r\n\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,EAAEC,OAAO,QAAQ,oBAAoB;AAEpD,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC;EAC1B;EACAC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE,IAAI;EAAE;EACvBC,OAAO,EAAE;AACb,CAAC,CAAC;AACF,OAAO,MAAMC,GAAG,GAAGA,CAACC,GAAG,EAAEC,MAAM,GAAG,CAAC,CAAC,KAAK;EACrC,OAAO,IAAIC,OAAO,CAAC,CAACT,OAAO,EAAED,MAAM,KAAK;IACpCE,QAAQ,CAACK,GAAG,CAACC,GAAG,EAAE;MAAEC;IAAO,CAAC,CAAC,CAACE,IAAI,CAAEC,QAAQ,IAAK;MAC7CX,OAAO,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,EAAEC,GAAG,IAAI;MACPd,MAAM,CAACc,GAAG,CAAC;IACf,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AACD,OAAO,MAAMC,IAAI,GAAGA,CAACP,GAAG,EAAEK,IAAI,GAAG,CAAC,CAAC,KAAK;EACpC,OAAO,IAAIH,OAAO,CAAC,CAACT,OAAO,EAAED,MAAM,KAAK;IACpCE,QAAQ,CAACa,IAAI,CAACP,GAAG,EAAEK,IAAI,EAAE;MACrBG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAK;MAClBX,OAAO,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,CAAC,EAAEC,GAAG,IAAI;MACPd,MAAM,CAACc,GAAG,CAAC;IACf,CAAC;EACL,CAAC,CAAC;AACN,CAAC;AAED,OAAO,MAAMG,KAAK,GAAGA,CAACT,GAAG,EAAEK,IAAI,GAAG,CAAC,CAAC,KAAK;EACrC,OAAO,IAAIH,OAAO,CAAC,CAACT,OAAO,EAAED,MAAM,KAAK;IACpCE,QAAQ,CAACe,KAAK,CAACT,GAAG,EAAEK,IAAI,EAAE;MACtBG,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC,CAACL,IAAI,CAAEC,QAAQ,IAAK;MAClBX,OAAO,CAACW,QAAQ,CAACC,IAAI,CAAC;IAC1B,CAAC,EAAEC,GAAG,IAAI;MACNd,MAAM,CAACc,GAAG,CAAC;IACf,CAAC,CAAC;EACN,CAAC,CAAC;AACN,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}