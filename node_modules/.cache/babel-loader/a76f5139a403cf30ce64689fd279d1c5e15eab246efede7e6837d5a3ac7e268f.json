{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-0b42f691\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Address = _resolveComponent(\"Address\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"iconfont title__icon\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.handleBackClick && $setup.handleBackClick(...args))\n  }, \"\"), _createTextVNode(\" 收货地址 \")]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.addressList, address => {\n    return _openBlock(), _createBlock(_component_Address, {\n      key: address._id,\n      address: address,\n      onClick: () => $setup.handleAddressClick(address._id)\n    }, null, 8, [\"address\", \"onClick\"]);\n  }), 128))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onClick","_cache","args","$setup","handleBackClick","_Fragment","_renderList","addressList","address","_createBlock","_component_Address","key","_id","handleAddressClick"],"sources":["F:\\Web2022\\shengxian\\src\\views\\chooseAddressList\\ChooseAddressList.vue"],"sourcesContent":["<template>\r\n    <div class=\"wrapper\">\r\n      <div class=\"title\">\r\n        <div\r\n          class=\"iconfont title__icon\"\r\n          @click=\"handleBackClick\"\r\n        >&#xe6db;</div>\r\n        收货地址\r\n      </div>\r\n      <Address\r\n        v-for=\"address in addressList\"\r\n        :key=\"address._id\"\r\n        :address=\"address\"\r\n        @click=\"() => handleAddressClick(address._id)\"\r\n      />\r\n    </div>\r\n  </template>\r\n<script>\r\nimport Address from '../../components/Address'\r\nimport useCommonAddressEffect from '../../effects/addressEffect'\r\n\r\nimport { toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { useRouter, useRoute } from 'vue-router'\r\n\r\nexport default {\r\n  name: 'ChooseAddressList',\r\n  components: { Address },\r\n  setup() {\r\n    const store = useStore()\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n    const shopId = route.params.shopId\r\n    const { addressList } = toRefs(store.state)\r\n    const { getAddressList } = useCommonAddressEffect()\r\n    getAddressList()\r\n    const handleBackClick = () => { router.back() }\r\n    const handleAddressClick = (id) => {\r\n      router.push(`/orderConfirmation/${shopId}/${id}`)\r\n    }\r\n    return { addressList, handleBackClick, handleAddressClick }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '../../style/viriables.scss';\r\n.wrapper {\r\n  overflow-y: auto;\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background: $dark-bgColor;\r\n}\r\n.title {\r\n  position: relative;\r\n  line-height: .44rem;\r\n  background: $bgColor;\r\n  font-size: .16rem;\r\n  color: $content-fontcolor;\r\n  text-align: center;\r\n  &__icon {\r\n    position: absolute;\r\n    left: .18rem;\r\n    top: 0;\r\n    font-size: .2rem;\r\n  }\r\n}\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAS;;EACbA,KAAK,EAAC;AAAO;;;uBADpBC,mBAAA,CAcM,OAdNC,UAcM,GAbJC,mBAAA,CAMM,OANNC,UAMM,GALJD,mBAAA,CAGe;IAFbH,KAAK,EAAC,sBAAsB;IAC3BK,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KACxB,GAAQ,G,iBAAM,QAEjB,E,sBACAN,mBAAA,CAKES,SAAA,QAAAC,WAAA,CAJkBH,MAAA,CAAAI,WAAW,EAAtBC,OAAO;yBADhBC,YAAA,CAKEC,kBAAA;MAHCC,GAAG,EAAEH,OAAO,CAACI,GAAG;MAChBJ,OAAO,EAAEA,OAAO;MAChBR,OAAK,EAAAA,CAAA,KAAQG,MAAA,CAAAU,kBAAkB,CAACL,OAAO,CAACI,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}