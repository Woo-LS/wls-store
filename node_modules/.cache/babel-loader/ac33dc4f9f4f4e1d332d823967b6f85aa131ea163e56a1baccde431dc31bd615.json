{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { reactive, toRefs } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { post } from \"../../utils/request\";\nimport Toast, { useToastEffect } from \"../../components/Toast.vue\";\n//处理登录逻辑\nconst useLoginEffect = showToast => {\n  const router = useRouter(); //获取到路由实例\n  const data = reactive({\n    username: \"\",\n    password: \"\"\n  });\n  const handleLogin = async () => {\n    try {\n      const {\n        username,\n        password\n      } = data;\n      if (username === \"\" || password === \"\") {\n        return showToast(\"请填写用户名密码\");\n      }\n      const result = await post(\"/api/user/login\", {\n        username: data.username,\n        password: data.password\n      });\n      // console.log(result);\n      if (result?.errno === 0) {\n        localStorage.isLogin = true;\n        router.push({\n          name: \"Home\"\n        });\n      } else {\n        showToast(\"登录失败\");\n      }\n    } catch (e) {\n      showToast(\"请求失败\");\n    }\n  };\n  const {\n    username,\n    password\n  } = toRefs(data);\n  return {\n    username,\n    password,\n    handleLogin\n  };\n};\n// 处理注册跳转\nconst useRegisterEffect = () => {\n  const router = useRouter(); //获取到路由实例\n  const handleRegisterClick = () => {\n    router.push({\n      name: \"Register\"\n    });\n  };\n  return {\n    handleRegisterClick\n  };\n};\nexport default {\n  name: \"Login\",\n  components: {\n    Toast\n  },\n  //职责就是告诉你，代码执行的一个流程\n  setup() {\n    const {\n      show,\n      toastMessage,\n      showToast\n    } = useToastEffect();\n    const {\n      username,\n      password,\n      handleLogin\n    } = useLoginEffect(showToast);\n    const {\n      handleRegisterClick\n    } = useRegisterEffect();\n    return {\n      handleLogin,\n      handleRegisterClick,\n      username,\n      password,\n      show,\n      toastMessage\n    };\n  }\n};","map":{"version":3,"names":["reactive","toRefs","useRouter","post","Toast","useToastEffect","useLoginEffect","showToast","router","data","username","password","handleLogin","result","errno","localStorage","isLogin","push","name","e","useRegisterEffect","handleRegisterClick","components","setup","show","toastMessage"],"sources":["F:\\Web2022\\week23-25\\shengxian\\src\\views\\login\\Login.vue"],"sourcesContent":["<template>\r\n  <div class=\"wrapper\">\r\n    <img\r\n      class=\"wrapper__img\"\r\n      src=\"http://www.dell-lee.com/imgs/vue3/user.png\"\r\n      alt=\"\"\r\n    />\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"用户名\"\r\n        v-model=\"username\"\r\n      />\r\n    </div>\r\n    <div class=\"wrapper__input\">\r\n      <input\r\n        type=\"password\"\r\n        class=\"wrapper__input__content\"\r\n        placeholder=\"请输入密码\"\r\n        v-model=\"password\"\r\n        autocomplete=\"new-password\"\r\n      />\r\n    </div>\r\n    <div class=\"wrapper__login-button\" @click=\"handleLogin\">登录</div>\r\n    <div class=\"wrapper__login-link\" @click=\"handleRegisterClick\">立即注册</div>\r\n    <Toast v-if=\"show\" :message=\"toastMessage\" />\r\n  </div>\r\n</template>\r\n<script>\r\nimport { reactive, toRefs } from \"vue\";\r\nimport { useRouter } from \"vue-router\";\r\nimport { post } from \"../../utils/request\";\r\nimport Toast, { useToastEffect } from \"../../components/Toast.vue\";\r\n//处理登录逻辑\r\nconst useLoginEffect = (showToast) => {\r\n  const router = useRouter(); //获取到路由实例\r\n  const data = reactive({ username: \"\", password: \"\" });\r\n  const handleLogin = async () => {\r\n    try {\r\n      const { username, password } = data;\r\n      if (username === \"\" || password === \"\") {\r\n        return showToast(\"请填写用户名密码\");\r\n      }\r\n      const result = await post(\"/api/user/login\", {\r\n        username: data.username,\r\n        password: data.password,\r\n      });\r\n      // console.log(result);\r\n      if (result?.errno === 0) {\r\n        localStorage.isLogin = true;\r\n        router.push({ name: \"Home\" });\r\n      } else {\r\n        showToast(\"登录失败\");\r\n      }\r\n    } catch (e) {\r\n      showToast(\"请求失败\");\r\n    }\r\n  };\r\n  const { username, password } = toRefs(data);\r\n  return { username, password, handleLogin };\r\n};\r\n// 处理注册跳转\r\nconst useRegisterEffect = () => {\r\n  const router = useRouter(); //获取到路由实例\r\n  const handleRegisterClick = () => {\r\n    router.push({ name: \"Register\" });\r\n  };\r\n  return { handleRegisterClick };\r\n};\r\nexport default {\r\n  name: \"Login\",\r\n  components: { Toast },\r\n  //职责就是告诉你，代码执行的一个流程\r\n  setup() {\r\n    const { show, toastMessage, showToast } = useToastEffect();\r\n    const { username, password, handleLogin } = useLoginEffect(showToast);\r\n    const { handleRegisterClick } = useRegisterEffect();\r\n    return {\r\n      handleLogin,\r\n      handleRegisterClick,\r\n      username,\r\n      password,\r\n      show,\r\n      toastMessage,\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n@import \"../../style/viriables.scss\";\r\n.wrapper {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 0;\r\n  right: 0;\r\n  transform: translateY(-50%);\r\n  &__img {\r\n    display: block;\r\n    margin: 0 auto 0.4rem auto;\r\n    width: 0.66rem;\r\n    height: 0.66rem;\r\n  }\r\n  &__input {\r\n    height: 0.48rem;\r\n    margin: 0 0.4rem 0.16rem 0.4rem;\r\n    padding: 0 0.16rem;\r\n    background: #f9f9f9;\r\n    border: 0.01rem solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.06rem;\r\n    &__content {\r\n      line-height: 0.48rem;\r\n      border: none;\r\n      outline: none;\r\n      width: 100%;\r\n      background: none;\r\n      font-size: 0.16rem;\r\n      color: $content-notice-fontcolor;\r\n      &::placeholder {\r\n        color: $content-notice-fontcolor;\r\n      }\r\n    }\r\n  }\r\n  &__login-button {\r\n    margin: 0.32rem 0.4rem 0.16rem 0.4rem;\r\n    line-height: 0.48rem;\r\n    background: #0091ff;\r\n    box-shadow: 0 0.04rem 0.08rem 0 rgba(0, 145, 255, 0.32);\r\n    border-radius: 0.04rem;\r\n    color: #fff;\r\n    font-size: 0.16rem;\r\n    text-align: center;\r\n  }\r\n  &__login-link {\r\n    text-align: center;\r\n    font-size: 0.14rem;\r\n    color: $content-notice-fontcolor;\r\n  }\r\n}\r\n</style>"],"mappings":";AA6BA,SAASA,QAAQ,EAAEC,MAAK,QAAS,KAAK;AACtC,SAASC,SAAQ,QAAS,YAAY;AACtC,SAASC,IAAG,QAAS,qBAAqB;AAC1C,OAAOC,KAAK,IAAIC,cAAa,QAAS,4BAA4B;AAClE;AACA,MAAMC,cAAa,GAAKC,SAAS,IAAK;EACpC,MAAMC,MAAK,GAAIN,SAAS,EAAE,EAAE;EAC5B,MAAMO,IAAG,GAAIT,QAAQ,CAAC;IAAEU,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EACrD,MAAMC,WAAU,GAAI,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAM;QAAEF,QAAQ;QAAEC;MAAS,IAAIF,IAAI;MACnC,IAAIC,QAAO,KAAM,EAAC,IAAKC,QAAO,KAAM,EAAE,EAAE;QACtC,OAAOJ,SAAS,CAAC,UAAU,CAAC;MAC9B;MACA,MAAMM,MAAK,GAAI,MAAMV,IAAI,CAAC,iBAAiB,EAAE;QAC3CO,QAAQ,EAAED,IAAI,CAACC,QAAQ;QACvBC,QAAQ,EAAEF,IAAI,CAACE;MACjB,CAAC,CAAC;MACF;MACA,IAAIE,MAAM,EAAEC,KAAI,KAAM,CAAC,EAAE;QACvBC,YAAY,CAACC,OAAM,GAAI,IAAI;QAC3BR,MAAM,CAACS,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MAC/B,OAAO;QACLX,SAAS,CAAC,MAAM,CAAC;MACnB;IACF,EAAE,OAAOY,CAAC,EAAE;MACVZ,SAAS,CAAC,MAAM,CAAC;IACnB;EACF,CAAC;EACD,MAAM;IAAEG,QAAQ;IAAEC;EAAS,IAAIV,MAAM,CAACQ,IAAI,CAAC;EAC3C,OAAO;IAAEC,QAAQ;IAAEC,QAAQ;IAAEC;EAAY,CAAC;AAC5C,CAAC;AACD;AACA,MAAMQ,iBAAgB,GAAIA,CAAA,KAAM;EAC9B,MAAMZ,MAAK,GAAIN,SAAS,EAAE,EAAE;EAC5B,MAAMmB,mBAAkB,GAAIA,CAAA,KAAM;IAChCb,MAAM,CAACS,IAAI,CAAC;MAAEC,IAAI,EAAE;IAAW,CAAC,CAAC;EACnC,CAAC;EACD,OAAO;IAAEG;EAAoB,CAAC;AAChC,CAAC;AACD,eAAe;EACbH,IAAI,EAAE,OAAO;EACbI,UAAU,EAAE;IAAElB;EAAM,CAAC;EACrB;EACAmB,KAAKA,CAAA,EAAG;IACN,MAAM;MAAEC,IAAI;MAAEC,YAAY;MAAElB;IAAU,IAAIF,cAAc,EAAE;IAC1D,MAAM;MAAEK,QAAQ;MAAEC,QAAQ;MAAEC;IAAY,IAAIN,cAAc,CAACC,SAAS,CAAC;IACrE,MAAM;MAAEc;IAAoB,IAAID,iBAAiB,EAAE;IACnD,OAAO;MACLR,WAAW;MACXS,mBAAmB;MACnBX,QAAQ;MACRC,QAAQ;MACRa,IAAI;MACJC;IACF,CAAC;EACH;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}